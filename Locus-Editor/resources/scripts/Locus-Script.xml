<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Locus-Script</name>
    </assembly>
    <members>
        <member name="T:Locus.Debug">
            <summary>
            Debugging functions for Locus.
            </summary>
        </member>
        <member name="M:Locus.Debug.Log">
            <summary>
            Logs a message to the console.
            </summary>
        </member>
        <member name="T:Locus.Input">
            <summary>
            Input system for Locus.
            </summary>
        </member>
        <member name="M:Locus.Input.IsKeyPressed(Locus.KeyCode)">
            <summary>
            Returns true when key is pressed.
            </summary>
        </member>
        <member name="M:Locus.Input.IsKeyHeld(Locus.KeyCode)">
            <summary>
            Returns true while key is held down.
            </summary>
        </member>
        <member name="M:Locus.Input.IsKeyReleased(Locus.KeyCode)">
            <summary>
            Returns true when key is released.
            </summary>
        </member>
        <member name="T:Locus.KeyCode">
            <summary>
            KeyCodes corresponding to physical keys on the keyboard. 
            Numerical keycodes begin with a "D" (Eg. D0, D1)
            </summary>
        </member>
        <member name="F:Locus.KeyCode.Space">
            <summary>
            Spacebar
            </summary>
        </member>
        <member name="F:Locus.KeyCode.Apostrophe">
            <summary>
            '
            </summary>
        </member>
        <member name="F:Locus.KeyCode.Comma">
            <summary>
            ,
            </summary>
        </member>
        <member name="F:Locus.KeyCode.Minus">
            <summary>
            -
            </summary>
        </member>
        <member name="F:Locus.KeyCode.Period">
            <summary>
            .
            </summary>
        </member>
        <member name="F:Locus.KeyCode.Slash">
            <summary>
            /
            </summary>
        </member>
        <member name="F:Locus.KeyCode.D0">
            <summary>
            0
            </summary>
        </member>
        <member name="F:Locus.KeyCode.D1">
            <summary>
            1
            </summary>
        </member>
        <member name="F:Locus.KeyCode.D2">
            <summary>
            2
            </summary>
        </member>
        <member name="F:Locus.KeyCode.D3">
            <summary>
            3
            </summary>
        </member>
        <member name="F:Locus.KeyCode.D4">
            <summary>
            4
            </summary>
        </member>
        <member name="F:Locus.KeyCode.D5">
            <summary>
            5
            </summary>
        </member>
        <member name="F:Locus.KeyCode.D6">
            <summary>
            6
            </summary>
        </member>
        <member name="F:Locus.KeyCode.D7">
            <summary>
            7
            </summary>
        </member>
        <member name="F:Locus.KeyCode.D8">
            <summary>
            8
            </summary>
        </member>
        <member name="F:Locus.KeyCode.D9">
            <summary>
            9
            </summary>
        </member>
        <member name="F:Locus.KeyCode.Semicolon">
            <summary>
            ;
            </summary>
        </member>
        <member name="F:Locus.KeyCode.Equal">
            <summary>
            =
            </summary>
        </member>
        <member name="F:Locus.KeyCode.LeftBracket">
            <summary>
            [
            </summary>
        </member>
        <member name="F:Locus.KeyCode.Backslash">
            <summary>
            \
            </summary>
        </member>
        <member name="F:Locus.KeyCode.RightBracket">
            <summary>
            ]
            </summary>
        </member>
        <member name="F:Locus.KeyCode.GraveAccent">
            <summary>
            `
            </summary>
        </member>
        <member name="F:Locus.KeyCode.World1">
            <summary>
            non-US #1
            </summary>
        </member>
        <member name="F:Locus.KeyCode.World2">
            <summary>
            non-US #2
            </summary>
        </member>
        <member name="T:Locus.Color">
            <summary>
            Represents a color in RGBA format with range 0 - 1.
            </summary>
        </member>
        <member name="F:Locus.Color.r">
            <summary> Red channel. </summary>
        </member>
        <member name="F:Locus.Color.g">
            <summary> Green channel. </summary>
        </member>
        <member name="F:Locus.Color.b">
            <summary> Blue channel. </summary>
        </member>
        <member name="F:Locus.Color.a">
            <summary> Alpha channel. </summary>
        </member>
        <member name="P:Locus.Color.Black">
            <summary> Returns a black color. </summary>
        </member>
        <member name="P:Locus.Color.White">
            <summary> Returns a white color. </summary>
        </member>
        <member name="P:Locus.Color.Red">
            <summary> Returns a red color. </summary>
        </member>
        <member name="P:Locus.Color.Green">
            <summary> Returns a green color. </summary>
        </member>
        <member name="P:Locus.Color.Blue">
            <summary> Returns a blue color. </summary>
        </member>
        <member name="P:Locus.Color.Yellow">
            <summary> Returns a yellow color. </summary>
        </member>
        <member name="M:Locus.Color.#ctor(System.Single)">
            <summary>
            Sets the RGB channels to the value with alpha = 1.0f.
            </summary>
        </member>
        <member name="M:Locus.Color.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Sets each RGB channels with alpha = 1.0f.
            </summary>
        </member>
        <member name="M:Locus.Color.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets each RGBA channels.
            </summary>
        </member>
        <member name="M:Locus.Color.op_Addition(Locus.Color,Locus.Color)">
            <summary> Adds two colors. </summary>
        </member>
        <member name="M:Locus.Color.op_Addition(Locus.Color,System.Single)">
            <summary> Adds a color with a scalar. </summary>
        </member>
        <member name="M:Locus.Color.op_Addition(System.Single,Locus.Color)">
            <summary> Adds a scalar value to each channel in a color. </summary>
        </member>
        <member name="M:Locus.Color.op_Subtraction(Locus.Color,Locus.Color)">
            <summary> Subtracts c2 from c1. </summary>
        </member>
        <member name="M:Locus.Color.op_Subtraction(Locus.Color,System.Single)">
            <summary> Subtracts a scalar value from a color. </summary>
        </member>
        <member name="M:Locus.Color.op_Subtraction(System.Single,Locus.Color)">
            <summary> Subtracts each channel in a color by a scalar value. </summary>
        </member>
        <member name="M:Locus.Color.op_Multiply(Locus.Color,Locus.Color)">
            <summary> Multiplies two colors. </summary>
        </member>
        <member name="M:Locus.Color.op_Multiply(Locus.Color,System.Single)">
            <summary> Multiplies a color with a scalar value. </summary>
        </member>
        <member name="M:Locus.Color.op_Multiply(System.Single,Locus.Color)">
            <summary> Multiplies each channel in a color with a scalar value. </summary>
        </member>
        <member name="M:Locus.Color.op_Division(Locus.Color,Locus.Color)">
            <summary> Divides c1 by c2. </summary>
        </member>
        <member name="M:Locus.Color.op_Division(Locus.Color,System.Single)">
            <summary> Divides a color by a scalar value. </summary>
        </member>
        <member name="M:Locus.Color.op_Division(System.Single,Locus.Color)">
            <summary> Divides a scalar value by each channel in a color. </summary>
        </member>
        <member name="M:Locus.Color.ToString">
            <summary> Prints each channel in a color. </summary>
        </member>
        <member name="T:Locus.Mat4">
            <summary>
            4x4 matrix of floats.
            </summary>
        </member>
        <member name="M:Locus.Mat4.#ctor(System.Single)">
            <summary>
            Sets a diagonal matrix.
            </summary>
        </member>
        <member name="T:Locus.Vec2">
            <summary>
            2D vector of floats.
            </summary>
        </member>
        <member name="F:Locus.Vec2.x">
            <summary> x value. </summary>
        </member>
        <member name="F:Locus.Vec2.y">
            <summary> y value. </summary>
        </member>
        <member name="P:Locus.Vec2.Zero">
            <summary>
            Returns a 2D zero vector.
            </summary>
        </member>
        <member name="M:Locus.Vec2.#ctor(System.Single)">
            <summary>
            Sets all values to the given value.
            </summary>
        </member>
        <member name="M:Locus.Vec2.#ctor(System.Single,System.Single)">
            <summary>
            Sets each value.
            </summary>
        </member>
        <member name="M:Locus.Vec2.Distance(Locus.Vec2,Locus.Vec2)">
            <summary>
            Distance between two 2D vectors.
            </summary>
        </member>
        <member name="M:Locus.Vec2.Length(Locus.Vec2)">
            <summary>
            Length of a 2D vector.
            </summary>
        </member>
        <member name="M:Locus.Vec2.op_Addition(Locus.Vec2,Locus.Vec2)">
            <summary> Adds two 2D vectors. </summary>
        </member>
        <member name="M:Locus.Vec2.op_Addition(Locus.Vec2,System.Single)">
            <summary> Adds a 2D vector with a scalar. </summary>
        </member>
        <member name="M:Locus.Vec2.op_Addition(System.Single,Locus.Vec2)">
            <summary> Adds a scalar value to each value in a 2D vector. </summary>
        </member>
        <member name="M:Locus.Vec2.op_Subtraction(Locus.Vec2,Locus.Vec2)">
            <summary> Subtracts v2 from v1. </summary>
        </member>
        <member name="M:Locus.Vec2.op_Subtraction(Locus.Vec2,System.Single)">
            <summary> Subtracts a scalar value from a 2D vector. </summary>
        </member>
        <member name="M:Locus.Vec2.op_Subtraction(System.Single,Locus.Vec2)">
            <summary> Subtracts each value in a 2D vector by a scalar value. </summary>
        </member>
        <member name="M:Locus.Vec2.op_Multiply(Locus.Vec2,Locus.Vec2)">
            <summary> Multiplies two 2D vectors. </summary>
        </member>
        <member name="M:Locus.Vec2.op_Multiply(Locus.Vec2,System.Single)">
            <summary> Multiplies a 2D vector with a scalar value. </summary>
        </member>
        <member name="M:Locus.Vec2.op_Multiply(System.Single,Locus.Vec2)">
            <summary> Multiplies each value in a 2D vector with a scalar value. </summary>
        </member>
        <member name="M:Locus.Vec2.op_Division(Locus.Vec2,Locus.Vec2)">
            <summary> Divides v1 by v2. </summary>
        </member>
        <member name="M:Locus.Vec2.op_Division(Locus.Vec2,System.Single)">
            <summary> Divides a 2D vector by a scalar value. </summary>
        </member>
        <member name="M:Locus.Vec2.op_Division(System.Single,Locus.Vec2)">
            <summary> Divides a scalar value by each value in a 2D vector. </summary>
        </member>
        <member name="M:Locus.Vec2.ToString">
            <summary> Prints each value in a 2D vector. </summary>
        </member>
        <member name="T:Locus.Vec3">
            <summary>
            3D vector of floats.
            </summary>
        </member>
        <member name="F:Locus.Vec3.x">
            <summary> x value. </summary>
        </member>
        <member name="F:Locus.Vec3.y">
            <summary> y value. </summary>
        </member>
        <member name="F:Locus.Vec3.z">
            <summary> z value. </summary>
        </member>
        <member name="P:Locus.Vec3.Zero">
            <summary>
            Returns a 3D zero vector.
            </summary>
        </member>
        <member name="M:Locus.Vec3.#ctor(System.Single)">
            <summary>
            Sets all values to the given value.
            </summary>
        </member>
        <member name="M:Locus.Vec3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Sets each value.
            </summary>
        </member>
        <member name="M:Locus.Vec3.Cross(Locus.Vec3,Locus.Vec3)">
            <summary>
            Cross product of two 3D vectors.
            </summary>
        </member>
        <member name="M:Locus.Vec3.Distance(Locus.Vec3,Locus.Vec3)">
            <summary>
            Distance between two 3D vectors.
            </summary>
        </member>
        <member name="M:Locus.Vec3.Length(Locus.Vec3)">
            <summary>
            Length of a 3D vector.
            </summary>
        </member>
        <member name="M:Locus.Vec3.op_Addition(Locus.Vec3,Locus.Vec3)">
            <summary> Adds two 3D vectors. </summary>
        </member>
        <member name="M:Locus.Vec3.op_Addition(Locus.Vec3,System.Single)">
            <summary> Adds a 3D vector with a scalar. </summary>
        </member>
        <member name="M:Locus.Vec3.op_Addition(System.Single,Locus.Vec3)">
            <summary> Adds a scalar value to each value in a 3D vector. </summary>
        </member>
        <member name="M:Locus.Vec3.op_Subtraction(Locus.Vec3,Locus.Vec3)">
            <summary> Subtracts v2 from v1. </summary>
        </member>
        <member name="M:Locus.Vec3.op_Subtraction(Locus.Vec3,System.Single)">
            <summary> Subtracts a scalar value from a 3D vector. </summary>
        </member>
        <member name="M:Locus.Vec3.op_Subtraction(System.Single,Locus.Vec3)">
            <summary> Subtracts each value in a 3D vector by a scalar value. </summary>
        </member>
        <member name="M:Locus.Vec3.op_Multiply(Locus.Vec3,Locus.Vec3)">
            <summary> Multiplies two 3D vectors. </summary>
        </member>
        <member name="M:Locus.Vec3.op_Multiply(Locus.Vec3,System.Single)">
            <summary> Multiplies a 3D vector with a scalar value. </summary>
        </member>
        <member name="M:Locus.Vec3.op_Multiply(System.Single,Locus.Vec3)">
            <summary> Multiplies each value in a 3D vector with a scalar value. </summary>
        </member>
        <member name="M:Locus.Vec3.op_Division(Locus.Vec3,Locus.Vec3)">
            <summary> Divides v1 by v2. </summary>
        </member>
        <member name="M:Locus.Vec3.op_Division(Locus.Vec3,System.Single)">
            <summary> Divides a 3D vector by a scalar value. </summary>
        </member>
        <member name="M:Locus.Vec3.op_Division(System.Single,Locus.Vec3)">
            <summary> Divides a scalar value by each value in a 3D vector. </summary>
        </member>
        <member name="M:Locus.Vec3.op_Multiply(Locus.Vec3,Locus.Mat4)">
            <summary> Multiplies a 3D vector by a 4x4 matrix. </summary>
        </member>
        <member name="M:Locus.Vec3.ToString">
            <summary> Prints each value in a 3D vector. </summary>
        </member>
        <member name="T:Locus.Vec4">
            <summary>
            4D vector of floats.
            </summary>
        </member>
        <member name="F:Locus.Vec4.x">
            <summary> x value. </summary>
        </member>
        <member name="F:Locus.Vec4.y">
            <summary> y value. </summary>
        </member>
        <member name="F:Locus.Vec4.z">
            <summary> z value. </summary>
        </member>
        <member name="F:Locus.Vec4.w">
            <summary> w value. </summary>
        </member>
        <member name="P:Locus.Vec4.Zero">
            <summary>
            Returns a 4D zero vector.
            </summary>
        </member>
        <member name="M:Locus.Vec4.#ctor(System.Single)">
            <summary>
            Sets all values to the given value.
            </summary>
        </member>
        <member name="M:Locus.Vec4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets each value.
            </summary>
        </member>
        <member name="M:Locus.Vec4.Distance(Locus.Vec4,Locus.Vec4)">
            <summary>
            Distance between two 4D vectors.
            </summary>
        </member>
        <member name="M:Locus.Vec4.Length(Locus.Vec4)">
            <summary>
            Length of a 4D vector.
            </summary>
        </member>
        <member name="M:Locus.Vec4.op_Addition(Locus.Vec4,Locus.Vec4)">
            <summary> Adds two 4D vectors. </summary>
        </member>
        <member name="M:Locus.Vec4.op_Addition(Locus.Vec4,System.Single)">
            <summary> Adds a 4D vector with a scalar. </summary>
        </member>
        <member name="M:Locus.Vec4.op_Addition(System.Single,Locus.Vec4)">
            <summary> Adds a scalar value to each value in a 4D vector. </summary>
        </member>
        <member name="M:Locus.Vec4.op_Subtraction(Locus.Vec4,Locus.Vec4)">
            <summary> Subtracts v2 from v1. </summary>
        </member>
        <member name="M:Locus.Vec4.op_Subtraction(Locus.Vec4,System.Single)">
            <summary> Subtracts a scalar value from a 4D vector. </summary>
        </member>
        <member name="M:Locus.Vec4.op_Subtraction(System.Single,Locus.Vec4)">
            <summary> Subtracts each value in a 4D vector by a scalar value. </summary>
        </member>
        <member name="M:Locus.Vec4.op_Multiply(Locus.Vec4,Locus.Vec4)">
            <summary> Multiplies two 4D vectors. </summary>
        </member>
        <member name="M:Locus.Vec4.op_Multiply(Locus.Vec4,System.Single)">
            <summary> Multiplies a 4D vector with a scalar value. </summary>
        </member>
        <member name="M:Locus.Vec4.op_Multiply(System.Single,Locus.Vec4)">
            <summary> Multiplies each value in a 4D vector with a scalar value. </summary>
        </member>
        <member name="M:Locus.Vec4.op_Division(Locus.Vec4,Locus.Vec4)">
            <summary> Divides v1 by v2. </summary>
        </member>
        <member name="M:Locus.Vec4.op_Division(Locus.Vec4,System.Single)">
            <summary> Divides a 4D vector by a scalar value. </summary>
        </member>
        <member name="M:Locus.Vec4.op_Division(System.Single,Locus.Vec4)">
            <summary> Divides a scalar value by each value in a 4D vector. </summary>
        </member>
        <member name="M:Locus.Vec4.op_Multiply(Locus.Vec4,Locus.Mat4)">
            <summary> Multiplies a 4D vector by a 4x4 matrix. </summary>
        </member>
        <member name="M:Locus.Vec4.ToString">
            <summary> Prints each value in a 4D vector. </summary>
        </member>
        <member name="T:Locus.RigidbodyType">
            <summary>
            The type of rigidbody.
            </summary>
        </member>
        <member name="F:Locus.RigidbodyType.Static">
            <summary> Static rigidbody. </summary>
        </member>
        <member name="F:Locus.RigidbodyType.Dynamic">
            <summary> Dynamic rigidbody. </summary>
        </member>
        <member name="F:Locus.RigidbodyType.Kinematic">
            <summary> Kinematic rigidbody. </summary>
        </member>
        <member name="T:Locus.Component">
            <summary>
            Base class for all components.
            </summary>
        </member>
        <member name="P:Locus.Component.Entity">
            <summary>
            The entity this component is attached to.
            </summary>
        </member>
        <member name="T:Locus.TransformComponent">
            <summary>
            Position, rotation, and scale of the entity.
            </summary>
        </member>
        <member name="P:Locus.TransformComponent.LocalTransform">
            <summary>
            Local transform matrix of the entity relative to its parent.
            </summary>
        </member>
        <member name="P:Locus.TransformComponent.WorldTransform">
            <summary>
            World transform matrix of the entity relative to the scene.
            </summary>
        </member>
        <member name="P:Locus.TransformComponent.Position">
            <summary>
            Local position of the entity.
            </summary>
        </member>
        <member name="P:Locus.TransformComponent.EulerRotation">
            <summary>
            Local euler rotation of the entity in degrees.
            </summary>
        </member>
        <member name="P:Locus.TransformComponent.Scale">
            <summary>
            Local scale of the entity.
            </summary>
        </member>
        <member name="P:Locus.TransformComponent.WorldToLocal">
            <summary>
            Matrix to convert world space coordinates to local space.
            </summary>
        </member>
        <member name="T:Locus.SpriteRendererComponent">
            <summary>
            Renders a 2D quad or sprite if a texture is attached.
            </summary>
        </member>
        <member name="P:Locus.SpriteRendererComponent.Color">
            <summary>
            Color of the sprite. Becomes a tint if a texture is attached.
            </summary>
        </member>
        <member name="P:Locus.SpriteRendererComponent.TilingFactor">
            <summary>
            Tiling factor of the attached texture.
            </summary>
        </member>
        <member name="T:Locus.CircleRendererComponent">
            <summary>
            Renders a 2D circle.
            </summary>
        </member>
        <member name="P:Locus.CircleRendererComponent.Color">
            <summary>
            Color of the circle.
            </summary>
        </member>
        <member name="P:Locus.CircleRendererComponent.Thickness">
            <summary>
            Inner thickness of the circle. 0 displays nothing and 1 displays a full circle.
            </summary>
        </member>
        <member name="P:Locus.CircleRendererComponent.Fade">
            <summary>
            The blur of the circle. 
            </summary>
        </member>
        <member name="T:Locus.Rigidbody2DComponent">
            <summary>
            The 2D physics body. 
            </summary>
        </member>
        <member name="P:Locus.Rigidbody2DComponent.BodyType">
            <summary>
            The physical behaviour of the rigidbody. Static, Dynamic, or Kinematic.
            </summary>
        </member>
        <member name="P:Locus.Rigidbody2DComponent.Mass">
            <summary>
            Mass of the body.
            </summary>
        </member>
        <member name="P:Locus.Rigidbody2DComponent.GravityScale">
            <summary>
            Affects the speed of the entity's movement affected by gravity. 
            </summary>
        </member>
        <member name="P:Locus.Rigidbody2DComponent.LinearDamping">
            <summary>
            The rate at which the world velocity is reduced on the entity.
            </summary>
        </member>
        <member name="P:Locus.Rigidbody2DComponent.AngularDamping">
            <summary>
            The rate at which the angular velocity is reduced on the entity.
            </summary>
        </member>
        <member name="P:Locus.Rigidbody2DComponent.FixedRotation">
            <summary>
            Whether the entity can rotate. Constraint along the z-axis.
            </summary>
        </member>
        <member name="P:Locus.Rigidbody2DComponent.IsBullet">
            <summary>
            Whether to enable continuous collision detection. 
            This prevents fast moving dynamic bodies to clip through other dynamic bodies.
            </summary>
        </member>
        <member name="P:Locus.Rigidbody2DComponent.Position">
            <summary>
            Position of the rigidbody. 
            Note: Position cannot be set through the transform component if a rigidbody is attached.
            </summary>
        </member>
        <member name="P:Locus.Rigidbody2DComponent.Velocity">
            <summary>
            Velocity of the rigidbody.
            </summary>
        </member>
        <member name="M:Locus.Rigidbody2DComponent.AddForce(Locus.Vec2)">
            <summary>
            Adds a force to the rigidbody. 
            </summary>
        </member>
        <member name="M:Locus.Rigidbody2DComponent.AddLinearImpulse(Locus.Vec2)">
            <summary>
            Adds an impluse to the rigidbody. Equal to the change in momentum.
            </summary>
        </member>
        <member name="T:Locus.CircleCollider2DComponent">
            <summary>
            2D circular collision area. 
            </summary>
        </member>
        <member name="T:Locus.Entity">
            <summary>
            Base class for all entities. 
            </summary>
        </member>
        <member name="F:Locus.Entity.ID">
            <summary> The unique identifier for the entity. </summary>
        </member>
        <member name="P:Locus.Entity.Tag">
            <summary> Name of the entity. </summary>
        </member>
        <member name="P:Locus.Entity.Group">
            <summary> The group/layer of the entity. </summary>
        </member>
        <member name="P:Locus.Entity.Enabled">
            <summary> The enabled state of the entity. </summary>
        </member>
        <member name="P:Locus.Entity.Transform">
            <summary> The transform component of the entity. </summary>
        </member>
        <member name="F:Locus.Entity.Null">
            <summary> Returns a null entity with ID = 0.</summary>
        </member>
        <member name="M:Locus.Entity.#ctor">
            <summary> Creates an entity with ID = 0. </summary>
        </member>
        <member name="M:Locus.Entity.HasComponent``1">
            <summary>
            Returns true if entity has component T. 
            </summary>
        </member>
        <member name="M:Locus.Entity.GetComponent``1">
            <summary>
            Gets the component T attached to the entity. Returns null if entity does not contain the component.
            </summary>
        </member>
        <member name="M:Locus.Entity.AddComponent``1">
            <summary>
            Adds component T to the entity.
            </summary>
        </member>
        <member name="M:Locus.Entity.CreateEntity(System.String)">
            <summary>
            Creates a new entity. Optionally defines the tag of the entity.
            </summary>
        </member>
        <member name="M:Locus.Entity.Destroy(Locus.Entity)">
            <summary>
            Destroys an entity.
            </summary>
        </member>
        <member name="M:Locus.Entity.Find(System.String)">
            <summary>
            Searches and returns an entity by tag. Returns null if entity is not found.
            </summary>
        </member>
        <member name="M:Locus.Entity.OnCollisionBegin(Locus.Entity)">
            <summary>
            Called whenever the entity begins a collision with another entity.
            </summary>
        </member>
        <member name="M:Locus.Entity.OnCollisionEnd(Locus.Entity)">
            <summary>
            Called whenever the entity ends a collision with another entity.
            </summary>
        </member>
    </members>
</doc>
